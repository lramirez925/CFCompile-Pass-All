<?xml	version=	"1.0"
		encoding=	"UTF-8" ?>
<project	name=		"waffles"
			basedir=	"."
			default=	"init">

<!--
	Expected Directory Structure
	{sProjectName}_app	*
	-	package
	-	src	*
		-	ColdFusion
			-	app	**
			-	app-compiled	**
			-	CFIDE
			-	lib
			-	WEB-INF
		-	{sProjectName}

	*	Directory name is not referenced
	**	Directory is built and destroyed by Ant


	Quick Setup Steps
	-	Create new ColdFusion instance.
	-	Don't add source code.
	-	Configure CFIDE as desired.
	-	Copy CFIDE to {sProjectName}_app/src/ColdFusion
	-	Copy jrun.jar to {sProjectName}_app/src/ColdFusion/lib
	-	Create new J2EE Package (EAR) in new instance with {sProjectName}. If you did anything besides giving it a name and serial number, then compare the makeWAR target with the Ant script generated by ColdFusion at /WEB-INF/cfusion/packages/{sProjectName}/build.xml
	-	Copy WEB-INF to {sProjectName}_app/src/ColdFusion
	-	Put cfcompile-pass-all.bat and cfcompile-pass-all.sh in {sProjectName}_app/src/ColdFusion/WEB-INF/cfusion/bin (These files use findjava.bat & findjava.sh)


	TO RUN
	Place build.xml inside {sProjectName}_app/src/{sProjectName}

	TO DEBUG
	Run	`ant getProperties` to verify file paths.


	CFIDE Special Note
	There's a section in makeWAR to includes or excludes the CFIDE. I've left it include for this example. I like to run internet facing apps with the CFIDE excluded.


	LINUX Special Note
	I found Linux had problems finding Java or finding the wrong Java. I added an additional parameter to cfcompile-pass-all to override the Java path used. This works better if you find the Java path you want to use and set the {sJavaPath} property.


	WARNING
	Directories must not contain spaces.
	Create symbolic links if needed (Windows too).
		For Example:
			cd	C:\Users\bmoore
			mklink /D MyProjects "C:\Users\bmoore\My Projects"
	http://en.wikipedia.org/wiki/NTFS_symbolic_link
	http://en.wikipedia.org/wiki/Symbolic_link

	The relative locations are built by invocation path, so to work properly, I do something like this:
	cd	C:\Users\bmoore\MyProjects\{sProjectName}_app\src\{sProjectName}
	ant

	-->


	<!--	Project Properties	-->
	<property	name=	"sProjectName"
				value=	"waffles" />
	<property	name=	"sSourcePath"
				location=	"." />
	<property	name=	"sEARPath"
				location=	"./../../package" />
	<property	name=	"sCFwwwrootPath"
				location=	"./../ColdFusion" />

	<!--	Temporary directories used by cfcompile	-->
	<property	name=	"sCFAppPath"
				location=	"./../ColdFusion/app" />
	<property	name=	"sCFAppCompiledPath"
				location=	"./../ColdFusion/app-compiled" />

	<!--	Contains a copy of jrun.jar	-->
	<property	name=	"sCFLibPath"
				location=	"./../ColdFusion/lib" />

	<!--	For Linux Compile Script	-->
	<property	environment=	"env" />
	<property	name=	"sJavaPath"
				value=	"${env.JAVA_HOME}/bin/java" />

	<!--	ColdFusion Generated Properties -->
	<property	name=	"sCFWEBINFPath"
				location=	"./../ColdFusion/WEB-INF" />
	<property	name=	"cfusion.dir"
				location=	"${sCFWEBINFPath}/cfusion" />
	<property	name=	"neoweb"
				location=	"${cfusion.dir}/wwwroot" />
	<property	name=	"dist.dir"
				location=	"${cfusion.dir}/packages/${sProjectName}" />
	<property	name=	"tools"
				location=	"${cfusion.dir}/../tools" />
	<property	name=	"j2ee-web.xml"
				location=	"${sCFWEBINFPath}/web.xml" />

	<!--	Project Targets	-->
	<target	name=		"init"
			depends=	"moveEAR">

	</target>

	<target	name=		"moveEAR"
			depends=	"makeEAR">
		<mkdir	dir=	"${sEARPath}" />

		<copy	file=		"${dist.dir}/${sProjectName}.ear"
				todir=		"${sEARPath}"
				overwrite=	"true" />

		<delete	file=			"${dist.dir}/${sProjectName}.ear"
				failonerror=	"false" />

	</target>

	<target	name=		"makeEAR"
			depends=	"makeWAR">
		<ear	file=	"${dist.dir}/${sProjectName}.ear"
				appxml=	"${dist.dir}/config/application.xml">
			<zipfileset	dir=		"${dist.dir}"
						includes=	"*.war"/>

		</ear>
		<delete	file=			"${dist.dir}/${sProjectName}.war"
				failonerror=	"false" />

	</target>

	<target name=		"makeWAR"
			depends=	"compileSource">
		<delete	file=			"${dist.dir}/${sProjectName}.war"
				failonerror=	"false" />

		<mkdir	dir=	"${cfusion.dir}/logs" />

		<war	file=	"${dist.dir}/${sProjectName}.war"
				webxml=	"${dist.dir}/config/web.xml">
			<zipfileset	dir=		"${sCFAppCompiledPath}"
						excludes=	"WEB-INF/**,CFIDE/**,cfdocs/**" />
			<!--	Exclude CFIDE - Use for internet facing applications.	-->
			<!--
			<zipfileset	dir=		"${sCFwwwrootPath}/CFIDE"
						prefix=		"CFIDE"
						excludes=	"administrator/entman/**,installers/**,administrator/**,wizards/**,probe.cfm,install.cfm,gettingstarted/**" />
			-->
			<!--	Include CFIDE - Use to verify setup.	-->
			<zipfileset	dir=		"${sCFwwwrootPath}/CFIDE"
						prefix=		"CFIDE"
						excludes=	"administrator/entman/**,installers/**,gettingstarted/**" />
			<zipfileset	dir=		"${sCFwwwrootPath}/WEB-INF/"
						prefix=		"WEB-INF"
						excludes=	"cfusion/**,j2ee-web.xml,web.xml,WASweb.xml,lib/jmc*.*,cfclasses/*.class" />
			<zipfileset	dir=		"${cfusion.dir}/lib"
						includes=	"*.jar,*.zip,*.xsl,*.cfg,*.cer,*.txt,defaultviewer.swf,updates/**,ajax/**,etc/**,11100309.LIC"
						prefix=		"WEB-INF/cfusion/lib"
						excludes=	"cfmx_bootstrap.jar,cfx.jar,iws-cfmx-j2ee.jar,msapps.jar,jintegra.jar,license.properties" />
			<zipfileset	dir=		"${dist.dir}/config"
						excludes=	"application.xml,web.xml,config.xml"
						includes=	"*.xml,*.properties"
						prefix=		"WEB-INF/cfusion/lib" />
			<zipfileset	dir=		"${cfusion.dir}/lib"
						includes=	"cfmx_bootstrap.jar,cfx.jar"
						prefix=		"WEB-INF/lib" />
			<zipfileset	dir=		"${cfusion.dir}/gateway"
						prefix=		"WEB-INF/cfusion/gateway" />
			<zipfileset	dir=		"${cfusion.dir}/lib"
						includes=	"*.xml,*.properties,*.org,*.policy,*.png"
						excludes=	"neo-debug.xml,iws6.properties,neo-datasource.xml,msapps.jar,license.properties"
						prefix=		"WEB-INF/cfusion/lib" />
			<zipfileset	dir=		"${cfusion.dir}/charting"
						prefix=		"WEB-INF/cfusion/charting" />
			<zipfileset	dir=		"${cfusion.dir}/logs"
						excludes=	"*.log" />
			<zipfileset	dir=		"${cfusion.dir}/registry"
						includes=	"cf.registry"
						prefix=		"WEB-INF/cfusion/registry" />
			<zipfileset	dir=		"${cfusion.dir}/CustomTags"
						prefix=		"WEB-INF/cfusion/CustomTags" />
			<zipfileset	dir=		"${cfusion.dir}/lib"
						includes=	"**/*CFXNeo.*"
						prefix=		"WEB-INF/cfusion/lib" />
			<zipfileset	dir=		"${cfusion.dir}/lib"
						includes=	"preso/**"
						prefix=		"WEB-INF/cfusion/lib" />
			<zipfileset	dir=		"${cfusion.dir}/db/sybase"
						includes=	"sp_default_charset.sql"
						prefix=		"WEB-INF/cfusion/db/sybase" />
			<zipfileset	dir=		"${cfusion.dir}/db/slserver54"
						prefix=		"WEB-INF/cfusion/db/slserver54" />
			<zipfileset	dir=		"${cfusion.dir}/MonitoringServer"
						prefix=		"WEB-INF/cfusion/MonitoringServer" />
			<zipfileset	dir=		"${cfusion.dir}/lib/oosdk"
						prefix=		"WEB-INF/cfusion/lib/oosdk" />
			<zipfileset	dir=		"${cfusion.dir}/cfx"
						includes=	"empty.txt"
						prefix=		"WEB-INF/cfusion/cfx" />
			<zipfileset	dir=		"${cfusion.dir}/cache"
						includes=	"empty.txt"
						prefix=		"WEB-INF/cfusion/cache" />
			<zipfileset	dir=		"${cfusion.dir}/lib/"
					 	includes=	"libnvr_*,nvr_win.dll"
					 	prefix=		"WEB-INF/cfusion/lib" />
			<zipfileset	dir=		"${cfusion.dir}/bin"
						includes=	"cfencode.*"
						prefix=		"WEB-INF/cfusion/bin" />

		</war>

		<delete	dir=	"${sCFAppPath}"
				failonerror=	"false" />
		<delete	dir=	"${sCFAppCompiledPath}"
				failonerror=	"false" />

	</target>

	<target	name=	"compileSource">
		<delete	dir=	"${sCFAppPath}"
				failonerror=	"false" />
		<mkdir	dir=	"${sCFAppPath}" />

		<delete	dir=	"${sCFAppCompiledPath}"
				failonerror=	"false" />
		<mkdir	dir=	"${sCFAppCompiledPath}" />

		<copy	todir=	"${sCFAppPath}">
			<fileset	dir=	"${sSourcePath}" />

		</copy>

		<!--	WARNING
				Directories must not contain spaces.
				Create symbolic links if needed (Windows too).
				http://en.wikipedia.org/wiki/NTFS_symbolic_link
				http://en.wikipedia.org/wiki/Symbolic_link
		-->

		<!--	Windows	-->
		<exec	executable=	"cmd"
				osfamily=	"windows">
			<arg	value=	"/c" />
			<arg	value=	"${sCFwwwrootPath}/WEB-INF/cfusion/bin/cfcompile-pass-all.bat ${sCFwwwrootPath}/WEB-INF/cfusion ${sCFLibPath}/jrun.jar ${sCFwwwrootPath}/WEB-INF ${sCFwwwrootPath} ${sCFAppPath} ${sCFAppCompiledPath}" />
			<arg	value=	"-p" />

		</exec>

		<!--	Linux	-->
		<chmod	file=		"${sCFwwwrootPath}/WEB-INF/cfusion/bin/cfcompile-pass-all.sh"
				perm=		"755"
				osfamily=	"unix" />
		<exec	executable=	"/bin/sh"
				osfamily=	"unix">
			<arg	value=	"-c" />
			<arg	value=	"${sCFwwwrootPath}/WEB-INF/cfusion/bin/cfcompile-pass-all.sh ${sCFwwwrootPath}/WEB-INF/cfusion ${sCFLibPath}/jrun.jar ${sCFwwwrootPath}/WEB-INF ${sCFwwwrootPath} ${sCFAppPath} ${sCFAppCompiledPath} ${sJavaPath}" />

		</exec>

	</target>

	<target	name=	"getProperties">
		<echo	message=	"sProjectName: ${sProjectName}" />
		<echo	message=	"sSourcePath: ${sSourcePath}" />
		<echo	message=	"sEARPath: ${sEARPath}" />
		<echo	message=	"sCFwwwrootPath: ${sCFwwwrootPath}" />
		<echo	message=	"sCFAppPath: ${sCFAppPath}" />
		<echo	message=	"sCFAppCompiledPath: ${sCFAppCompiledPath}" />
		<echo	message=	"sCFLibPath: ${sCFLibPath}" />
		<echo	message=	"sJavaPath: ${sJavaPath}" />
		<echo	message=	"cfusion.dir: ${cfusion.dir}" />
		<echo	message=	"neoweb: ${neoweb}" />
		<echo	message=	"dist.dir: ${dist.dir}" />
		<echo	message=	"tools: ${tools}" />
		<echo	message=	"j2ee-web.xml: ${j2ee-web.xml}" />


	</target>

</project>